struct Image : Item
{
    source
};

function update(EventState events, any parent, (Image image, Image nextItem))
{
    return image;
}

function update(EventState events, any parent, ((Image image, Image nextItem), ...controls))
{
	return image -> update(events, parent, ...controls);
}

function process(ApplicationState state, (Image image, ...controls))
{
    return tail process(state, ...controls);
}

function process(ApplicationState state, Image image)
{
    return state.user;
}

function draw(i64 renderer, any parent, Image image)
{
	let surface = SDL::Image::IMG_Load(@image.source);
	let texture = SDL::SDL_CreateTextureFromSurface(renderer, surface);

	SDL::SDL_RenderCopy(renderer, texture, 0i64, boundingRect(image));
	SDL::SDL_FreeSurface(surface);

	return nothing;
}
