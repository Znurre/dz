struct Composite : Item;

function update(EventState events, Composite image, Composite nextItem)
{
    return update(events
		, composite(image)
		, composite(nextItem)
		);
}

function update(EventState events, (Composite image, ...controls), (Composite nextItem, ...nextControls))
{
	let result = update(events
		, composite(image)
		, composite(nextItem)
		);

	return result -> update(events, ...controls, ...nextControls);
}

function process(ApplicationState state, (Composite image, ...controls))
{
	let s = state with
	{
		user: process(state, composite(image))
	};

    return tail process(s, ...controls);
}

function process(ApplicationState state, Composite image)
{
    return process(state, composite(image));
}

function draw(long renderer, any parent, Composite image)
{
	return draw(renderer, parent, composite(image));
}
