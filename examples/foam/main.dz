import int puts(string str);

import int SDL_Init(uint flags);
import int SDL_SetRenderDrawColor(long renderer, int r, int g, int b, int a);
import int SDL_RenderClear(long renderer);
import int SDL_RenderFillRect(long renderer, SDL_Rect rect);
import int SDL_PollKeyEvent(SDL_KeyboardEvent key);

import long SDL_CreateRenderer(long window, int index, int flags);
import long SDL_CreateWindow(string title, int x, int y, int w, int h, int flags);

import void SDL_RenderPresent(long renderer);
import void SDL_PumpEvents();

import void printnum(int num);

global SDL_INIT_VIDEO: 0x00000020u;
global SDL_WINDOWPOS_UNDEFINED: 0x1FFF0000u;
global SDL_KEYDOWN: 0x300u;
global SDL_KEYUP: 0x301u;
global SDLK_a: 0x61u;
global SDLK_d: 0x64u;
global SDLK_s: 0x73u;
global SDLK_w: 0x77u;

struct SDL_Rect
{
    x: 0,
    y: 0,
    width: 0,
    height: 0
};

struct SDL_KeyboardEvent
{
    type: 0,
    timestamp: 0,
    windowID: 0,
    padding: 0,
    scancode: 0,
    sym: 0,
    padding: 0L
};

global Normal: 0;
global MouseOver: 1;

struct Item
{
    x: 0,
    y: 0,
    width: 0,
    height: 0,
    state: 0
};

struct Button : Item
{
    text
};

struct State
{
    counter: 0
};

function application(State state)
{
    return [
        Button
        {
            x: 10 + state.counter,
            y: 10,
            width: 70,
            height: 20,
            text: "Click me!"
        },
        Button
        {
            x: 10 + state.counter,
            y: 40,
            width: 70,
            height: 20,
            text: "Click me!"
        }
    ];
}

function boundingRect(Item item)
{
    return SDL_Rect
    {
        x: item.x,
        y: item.y,
        width: item.width,
        height: item.height
    };
}

function clear(long renderer, State state)
{
    SDL_SetRenderDrawColor(renderer, 255, 255, 255, 255);
    SDL_RenderClear(renderer);

    return state;
}

function present(long renderer, State state)
{
    SDL_RenderPresent(renderer);

    return state;
}

function drawButton(long renderer, Button button)
{
    SDL_SetRenderDrawColor(renderer, 255, 0, 0, 255);

    SDL_RenderFillRect(renderer
        , boundingRect(button)
        );

    return nothing;
}

function draw(long renderer, State state, Button button)
{
    drawButton(renderer, button);

    return state;
}

function draw(long renderer, State state, Button button, ...controls)
{
    drawButton(renderer, button);

    return draw(renderer, state, ...controls);
}

function initState()
{
    return State {};
}

function mainLoop(long renderer, State state)
{
    return mainLoop(renderer
        , present(renderer
            , draw(renderer
                , clear(renderer, state)
                , application(state)
                )
            )
        );
}

export int main()
{
    SDL_Init(SDL_INIT_VIDEO);

    return mainLoop(
        SDL_CreateRenderer(
            SDL_CreateWindow("test", 0, 0, 800, 600, 0), 0, 0)
            , initState()
        );
}
