use "sdl.fc"
use "foam.fc"
use "button.fc"
use "rectangle.fc"
use "image.fc"
use "composite.fc"
use "column.fc"

import i32 puts(string str);

import void printnum(i32 num);

struct State
{
    counter: 0
};

struct SideBarButton : Item
{
	icon
};

struct SideBar : Item
{
	items
};

struct SideBarItem
{
	icon
};

function expand(SideBarButton item)
{
	return Rectangle
	{
		x: item.x,
		y: item.y,
		width: item.width,
		height: item.height,
		color: rgb(210, 51, 81),
		children: [
			Image
			{
				x: 25,// item.x + ((item.width - 50) / 2),
				y: item.y + ((item.height - 50) / 2),
				width: 50,
				height: 50,
				source: item.icon
			}
		]
	};
}

function createSideBarButton(SideBarItem item)
{
	return LayoutItem {
		stretch: 0,
		minimum: 100,
		item: SideBarButton
		{
			icon: item.icon
		}
	};
}

function itemsFor((SideBarItem item, ...items))
{
	return createSideBarButton(item) -> itemsFor(...items);
}

function itemsFor(SideBarItem item)
{
	return createSideBarButton(item);
}

function expand(SideBar item)
{
	return Rectangle {
		width: item.width,
		height: item.height,
		color: rgb(210, 51, 81),
		children: [
			Column
			{
				children: itemsFor(item.items)
			}
		]
	};
}

function increaseCounter(State state)
{
    return state with
    {
        counter: state.counter + 1
    };
}

function decreaseCounter(State state)
{
    return state with
    {
        counter: state.counter - 1
    };
}

function application1(State state)
{
    return [
		Row {
			children: [
				LayoutItem {
					stretch: 0,
					minimum: 100,
					item: Rectangle {
						color: rgb(210, 51, 81),
						children: [
							Column
							{
								children: [
									LayoutItem {
										stretch: 0,
										minimum: 100,
										item: Rectangle {
											color: rgb(210, 51, 81),
											children: [
												Image {
													x: 25,// item.x + ((item.width - 50) / 2),
													y: 25,
													width: 50,
													height: 50,
													source: "dishes.png"
												}
											]
										}
									},
									LayoutItem {
										stretch: 0,
										minimum: 100,
										item: Rectangle {
											color: rgb(210, 51, 81),
											children: [
												Image {
													x: 25,// item.x + ((item.width - 50) / 2),
													y: 125,
													width: 50,
													height: 50,
													source: "sign-out.png"
												}
											]
										}
									}
								]
							}
						]
					}
				},
				LayoutItem {
					stretch: 1,
					item: Rectangle {
						color: rgb(255, 255, 255)
					}
				}
			]
		}
    ];
}

function application(State state)
{
    return [
		Row {
			children: [
				LayoutItem {
					stretch: 0,
					minimum: 100,
					item: SideBar {
						items: [
							SideBarItem {
								icon: "dishes.png"
							},
							SideBarItem {
								icon: "sign-out.png"
							}
						]
					}
				},
				LayoutItem {
					stretch: 1,
					item: Rectangle {
						color: rgb(255, 255, 255)
					}
				}
			]
		}
    ];
}

function initState()
{
    return State {};
}

export i32 main()
{
    let definition = ApplicationDefinition
    {
        state: initState,
        ui: application,
    };

    return Foam::run(definition);
}
